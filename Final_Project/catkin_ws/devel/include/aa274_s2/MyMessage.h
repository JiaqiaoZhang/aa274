// Generated by gencpp from file aa274_s2/MyMessage.msg
// DO NOT EDIT!


#ifndef AA274_S2_MESSAGE_MYMESSAGE_H
#define AA274_S2_MESSAGE_MYMESSAGE_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace aa274_s2
{
template <class ContainerAllocator>
struct MyMessage_
{
  typedef MyMessage_<ContainerAllocator> Type;

  MyMessage_()
    : text()
    , flag(false)
    , symbol(0)
    , ratio(0.0)
    , clock()
    , period()
    , para(0)  {
    }
  MyMessage_(const ContainerAllocator& _alloc)
    : text(_alloc)
    , flag(false)
    , symbol(0)
    , ratio(0.0)
    , clock()
    , period()
    , para(0)  {
  (void)_alloc;
    }



   typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _text_type;
  _text_type text;

   typedef uint8_t _flag_type;
  _flag_type flag;

   typedef uint8_t _symbol_type;
  _symbol_type symbol;

   typedef double _ratio_type;
  _ratio_type ratio;

   typedef ros::Time _clock_type;
  _clock_type clock;

   typedef ros::Duration _period_type;
  _period_type period;

   typedef int64_t _para_type;
  _para_type para;





  typedef boost::shared_ptr< ::aa274_s2::MyMessage_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::aa274_s2::MyMessage_<ContainerAllocator> const> ConstPtr;

}; // struct MyMessage_

typedef ::aa274_s2::MyMessage_<std::allocator<void> > MyMessage;

typedef boost::shared_ptr< ::aa274_s2::MyMessage > MyMessagePtr;
typedef boost::shared_ptr< ::aa274_s2::MyMessage const> MyMessageConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::aa274_s2::MyMessage_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::aa274_s2::MyMessage_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace aa274_s2

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': False, 'IsMessage': True, 'HasHeader': False}
// {'aa274_s2': ['/home/aa274/catkin_ws/src/aa274_s2/msg'], 'std_msgs': ['/opt/ros/kinetic/share/std_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::aa274_s2::MyMessage_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::aa274_s2::MyMessage_<ContainerAllocator> const>
  : FalseType
  { };

template <class ContainerAllocator>
struct IsMessage< ::aa274_s2::MyMessage_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::aa274_s2::MyMessage_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::aa274_s2::MyMessage_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::aa274_s2::MyMessage_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::aa274_s2::MyMessage_<ContainerAllocator> >
{
  static const char* value()
  {
    return "239c79299df89155b13fc3feae022d2f";
  }

  static const char* value(const ::aa274_s2::MyMessage_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x239c79299df89155ULL;
  static const uint64_t static_value2 = 0xb13fc3feae022d2fULL;
};

template<class ContainerAllocator>
struct DataType< ::aa274_s2::MyMessage_<ContainerAllocator> >
{
  static const char* value()
  {
    return "aa274_s2/MyMessage";
  }

  static const char* value(const ::aa274_s2::MyMessage_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::aa274_s2::MyMessage_<ContainerAllocator> >
{
  static const char* value()
  {
    return "string text\n\
bool flag\n\
char symbol\n\
float64 ratio\n\
time clock\n\
duration period\n\
int64 para\n\
";
  }

  static const char* value(const ::aa274_s2::MyMessage_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::aa274_s2::MyMessage_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.text);
      stream.next(m.flag);
      stream.next(m.symbol);
      stream.next(m.ratio);
      stream.next(m.clock);
      stream.next(m.period);
      stream.next(m.para);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct MyMessage_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::aa274_s2::MyMessage_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::aa274_s2::MyMessage_<ContainerAllocator>& v)
  {
    s << indent << "text: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.text);
    s << indent << "flag: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.flag);
    s << indent << "symbol: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.symbol);
    s << indent << "ratio: ";
    Printer<double>::stream(s, indent + "  ", v.ratio);
    s << indent << "clock: ";
    Printer<ros::Time>::stream(s, indent + "  ", v.clock);
    s << indent << "period: ";
    Printer<ros::Duration>::stream(s, indent + "  ", v.period);
    s << indent << "para: ";
    Printer<int64_t>::stream(s, indent + "  ", v.para);
  }
};

} // namespace message_operations
} // namespace ros

#endif // AA274_S2_MESSAGE_MYMESSAGE_H
